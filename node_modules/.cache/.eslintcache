[{"/Users/charlie/Documents/The Net Ninja/Material-UI/src/index.js":"1","/Users/charlie/Documents/The Net Ninja/Material-UI/src/App.js":"2","/Users/charlie/Documents/The Net Ninja/Material-UI/src/pages/Create.js":"3","/Users/charlie/Documents/The Net Ninja/Material-UI/src/pages/Notes.js":"4","/Users/charlie/Documents/The Net Ninja/Material-UI/src/components/NoteCard.js":"5","/Users/charlie/Documents/The Net Ninja/Material-UI/src/components/Layout.js":"6"},{"size":455,"mtime":1617594436782,"results":"7","hashOfConfig":"8"},{"size":869,"mtime":1617682296181,"results":"9","hashOfConfig":"8"},{"size":3298,"mtime":1617683084329,"results":"10","hashOfConfig":"8"},{"size":1092,"mtime":1617689633786,"results":"11","hashOfConfig":"8"},{"size":5120,"mtime":1617860503638,"results":"12","hashOfConfig":"8"},{"size":4863,"mtime":1617861933489,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"16i6q8r",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},"/Users/charlie/Documents/The Net Ninja/Material-UI/src/index.js",[],["31","32"],"/Users/charlie/Documents/The Net Ninja/Material-UI/src/App.js",["33"],"import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Notes from './pages/Notes'\nimport Create from './pages/Create'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\nimport Layout from './components/Layout'\nimport { purple } from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Quicksand',\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  }\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Notes />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/charlie/Documents/The Net Ninja/Material-UI/src/pages/Create.js",["34","35","36"],"import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Typography, Button, ButtonGroup, Container, FormControlLabel, FormLabel, FormControl } from '@material-ui/core';\nimport { Radio, RadioGroup } from '@material-ui/core';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n})\n\n\n\nexport default function Create() {\n  const classes = useStyles();\n  const [title, setTitle] = useState('');\n  const [details, setDetails] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState('todos');\n  const history = useHistory();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (titleError == '') {\n      setTitleError(true)\n    }\n\n    if (detailsError == '') {\n      setDetailsError(true)\n    }\n\n    if (title && details) {\n      fetch('http://localhost:8000/note', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title, details, category })\n      })\n        .then(() => {\n          history.push('/')\n        })\n    }\n  }\n\n  return (\n    <Container>\n      <Typography\n        className={classes.title}\n        variant='h6'\n        component='h2'\n        color='textSecondary'\n        gutterBottom\n      >\n        Create a new Note\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={onSubmit}>\n        <TextField\n          onChange={e => setTitle(e.target.value)}\n          className={classes.field}\n          label='Note title'\n          color='primary'\n          variant='outlined'\n          fullWidth\n          error={titleError}\n          required\n        />\n\n        <TextField\n          onChange={e => setDetails(e.target.value)}\n          className={classes.field}\n          label='Note details'\n          color='primary'\n          variant='outlined'\n          fullWidth\n          multiline\n          row={4}\n          error={detailsError}\n          required\n        />\n\n        <FormControl className={classes.field} color='primary'>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup value={category} onChange={e => setCategory(e.target.value)}>\n            <FormControlLabel value='money' control={<Radio color='primary' />} label='Money'></FormControlLabel>\n            <FormControlLabel value='todos' control={<Radio color='primary' />} label='Todos'></FormControlLabel>\n            <FormControlLabel value='reminders' control={<Radio color='primary' />} label='Reminders'></FormControlLabel>\n            <FormControlLabel value='work' control={<Radio color='primary' />} label='Work'></FormControlLabel>\n          </RadioGroup>\n        </FormControl>\n        <Button\n          className={classes.btn}\n          onClick={() => console.log('You clicked me')}\n          type='submit'\n          color='primary'\n          variant='contained'\n          endIcon={<KeyboardArrowRight />}\n        >\n          Submit\n      </Button>\n      </form>\n    </Container>\n  )\n}\n","/Users/charlie/Documents/The Net Ninja/Material-UI/src/pages/Notes.js",["37"],"import { useEffect, useState } from 'react';\nimport { Container, Grid } from '@material-ui/core';\nimport NoteCard from '../components/NoteCard';\nimport Masonry from 'react-masonry-css';\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n\n  useEffect(() => {\n    fetch('http://localhost:8000/note')\n      .then(res => res.json())\n      .then(data => {\n        setNotes(data)\n      })\n  }, [])\n\n  const handleDelete = async (id) => {\n    await fetch('http://localhost:8000/note/' + id, {\n      method: 'DELETE'\n    })\n\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes)\n  };\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  }\n  return (\n    <Container>\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {\n          notes.map(note => (\n            <div key={note.id}>\n              <NoteCard note={note} handleDelete={handleDelete} />\n            </div>\n          ))\n        }\n      </Masonry>\n    </Container>\n  )\n}\n","/Users/charlie/Documents/The Net Ninja/Material-UI/src/components/NoteCard.js",["38","39"],"import { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport { Avatar, IconButton, Typography } from '@material-ui/core';\nimport { DeleteOutlined } from '@material-ui/icons';\nimport { amber, blue, green, pink, yellow } from '@material-ui/core/colors';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    card: {\n      height: '320px',\n      width: '360px'\n    },\n    test: {\n      border: (note) => {\n        if (note.category === 'reminders')\n          return '1px solid red'\n      }\n    },\n    avatar: {\n      backgroundColor: (note) => {\n        if (note.category === 'work') {\n          return yellow[700]\n        }\n        if (note.category === 'todos') {\n          return green[500]\n        }\n        if (note.category === 'reminders') {\n          return pink[500]\n        }\n        return blue[500]\n      }\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontFamily: 'Quicksand',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: 'none',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n      textAlign: 'center',\n      width: '400px',\n      padding: 50,\n      paddingTop: 30,\n      position: 'absolute',\n      top: '20%',\n      outline: 'none'\n    },\n    delete: {\n      fontSize: '100px',\n      color: amber[200]\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    padding: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    },\n    favorite: {\n      color: yellow[500]\n    }\n  }\n})\n\nconst NoteCard = ({ note, handleDelete }) => {\n  const classes = useStyles(note);\n  const [open, setOpen] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFavorite = () => {\n\n    if (isFavorite) {\n      setIsFavorite(false)\n\n    } else {\n      setIsFavorite(true)\n      // change color\n    }\n\n  }\n\n  return (\n    <div>\n      <Card className={classes.card, classes.test} elevation={1}>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>{note.category[0].toUpperCase()}</Avatar>\n          }\n          action={\n            <>\n              <IconButton>\n                <DeleteOutlined onClick={handleOpen} />\n                <Modal\n                  aria-labelledby='transition-modal-title'\n                  aria-describedby='transition-modal-description'\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                  <Fade in={open}>\n                    <div className={classes.paper}>\n                      <div styles={{ position: 'absolute' }} >\n                        <IconButton size='small' onClick={handleClose}><CloseIcon /></IconButton>\n                      </div>\n                      <ErrorOutlineOutlinedIcon className={classes.delete} />\n                      <Typography variant='h5' component='h2' id='transition-modal-title'>Are you sure?</Typography>\n                      <Typography component='p' fontSize='1rem' gutterBottom color='textSecondary'>If you delete it, you can't recover it.</Typography>\n                      <Button className={classes.margin} variant='contained' color='white' onClick={handleClose}>Cancel</Button>\n                      <Button className={classes.margin} variant='contained' color='secondary' onClick={() => handleDelete(note.id)}>Delete</Button>\n                    </div>\n                  </Fade>\n                </Modal>\n              </IconButton>\n            </>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n\n        <CardContent>\n          <Typography variant='body2' color='textSecondary'>\n            {note.details}\n          </Typography>\n        </CardContent>\n\n        <CardActions>\n          <Link to='/create'>\n            <Button size='small' variant='outlined' color='primary'>\n              Edit\n            </Button>\n          </Link>\n          <IconButton>\n            <StarBorderRoundedIcon onClick={handleFavorite} />\n          </IconButton>\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nexport default NoteCard\n","/Users/charlie/Documents/The Net Ninja/Material-UI/src/components/Layout.js",["40","41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":6,"column":10,"nodeType":"49","messageId":"50","endLine":6,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":3,"column":30,"nodeType":"49","messageId":"50","endLine":3,"endColumn":41},{"ruleId":"52","severity":1,"message":"53","line":33,"column":20,"nodeType":"54","messageId":"55","endLine":33,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":37,"column":22,"nodeType":"54","messageId":"55","endLine":37,"endColumn":24},{"ruleId":"47","severity":1,"message":"56","line":2,"column":21,"nodeType":"49","messageId":"50","endLine":2,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":58,"column":7,"nodeType":"59","messageId":"55","endLine":58,"endColumn":14},{"ruleId":"60","severity":1,"message":"61","line":109,"column":36,"nodeType":"62","messageId":"63","endLine":109,"endColumn":37},{"ruleId":"64","severity":1,"message":"65","line":100,"column":16,"nodeType":"66","messageId":"67","endLine":100,"endColumn":24,"fix":"68"},{"ruleId":"64","severity":1,"message":"65","line":124,"column":30,"nodeType":"66","messageId":"67","endLine":124,"endColumn":38,"fix":"69"},{"ruleId":"52","severity":1,"message":"53","line":171,"column":44,"nodeType":"54","messageId":"55","endLine":171,"endColumn":46},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'purple' is defined but never used.","Identifier","unusedVar","'ButtonGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Grid' is defined but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"72","text":"73"},{"range":"74","text":"73"},"no-global-assign","no-unsafe-negation",[2636,2636],"()",[3139,3139]]