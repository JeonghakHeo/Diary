{"ast":null,"code":"var _jsxFileName = \"/Users/charlie/Documents/The Net Ninja/Material-UI/src/pages/Notes.js\";\nimport { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport NoteCard from '../components/NoteCard';\nimport Masonry from 'react-masonry-css';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = ({\n  notes,\n  setNotes,\n  data\n}) => {\n  console.log(data);\n\n  const handleDelete = async id => {\n    await fetch('http://localhost:8000/note/' + id, {\n      method: 'DELETE'\n    });\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpoints,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(NoteCard, {\n          note: note,\n          handleDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Notes;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.search.data\n  };\n};\n\nexport default connect(mapStateToProps)(Notes);\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/charlie/Documents/The Net Ninja/Material-UI/src/pages/Notes.js"],"names":["useEffect","useState","Container","NoteCard","Masonry","connect","Notes","notes","setNotes","data","console","log","handleDelete","id","fetch","method","newNotes","filter","note","breakpoints","default","map","mapStateToProps","state","search"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAA+B;AAE3CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,QAAMG,YAAY,GAAG,MAAOC,EAAP,IAAc;AACjC,UAAMC,KAAK,CAAC,gCAAgCD,EAAjC,EAAqC;AAC9CE,MAAAA,MAAM,EAAE;AADsC,KAArC,CAAX;AAIA,UAAMC,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAjC,CAAjB;AACAL,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD,GAPD;;AAQA,QAAMG,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE,CADS;AAElB,UAAM,CAFY;AAGlB,SAAK;AAHa,GAApB;AAKA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,OAAD;AACE,MAAA,cAAc,EAAED,WADlB;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,eAAe,EAAC,wBAHlB;AAAA,gBAMIZ,KAAK,CAACc,GAAN,CAAUH,IAAI,iBACZ;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,IAAhB;AAAsB,UAAA,YAAY,EAAEN;AAApC;AAAA;AAAA;AAAA;AAAA;AADF,SAAUM,IAAI,CAACL,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlCD;;KAAMP,K;;AAoCN,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,IAAI,EAAEc,KAAK,CAACC,MAAN,CAAaf;AADd,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACiB,eAAD,CAAP,CAAyBhB,KAAzB,CAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport NoteCard from '../components/NoteCard';\nimport Masonry from 'react-masonry-css';\nimport { connect } from 'react-redux';\n\n\nconst Notes = ({ notes, setNotes, data }) => {\n\n  console.log(data);\n\n  const handleDelete = async (id) => {\n    await fetch('http://localhost:8000/note/' + id, {\n      method: 'DELETE'\n    })\n\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes)\n  };\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  }\n  return (\n    <Container>\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {\n          notes.map(note => (\n            <div key={note.id}>\n              <NoteCard note={note} handleDelete={handleDelete} />\n            </div>\n          ))\n        }\n      </Masonry>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.search.data\n  }\n}\n\nexport default connect(mapStateToProps)(Notes)"]},"metadata":{},"sourceType":"module"}