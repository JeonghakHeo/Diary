{"ast":null,"code":"var _jsxFileName = \"/Users/charlie/Documents/The Net Ninja/Material-UI/src/components/Layout.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { makeStyles, Drawer, Typography } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { AddCircleOutlined, SubjectOutlined } from '@material-ui/icons';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      display: 'flex'\n    },\n    drawer: {\n      width: drawerWidth\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    page: {\n      backgroundColor: '#f9f9f9',\n      width: '100%',\n      padding: theme.spacing(3)\n    },\n    active: {\n      backgroundColor: '#f4f4f4'\n    },\n    title: {\n      padding: theme.spacing(2)\n    },\n    appbar: {\n      backgroundColor: 'white',\n      color: 'rgba(0, 0, 0, 0.87)',\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    toolbar: theme.mixins.toolbar,\n    date: {\n      flexGrow: 1\n    },\n    avatar: {\n      marginLeft: theme.spacing(2)\n    }\n  };\n});\n\nconst Layout = ({\n  children\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const menuItems = [{\n    title: 'My notes',\n    icon: /*#__PURE__*/_jsxDEV(SubjectOutlined, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this),\n    path: '/'\n  }, {\n    title: 'Create',\n    icon: /*#__PURE__*/_jsxDEV(AddCircleOutlined, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this),\n    path: '/create'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.appbar,\n      elevation: 0,\n      children: /*#__PURE__*/_jsxDEV(ToolBar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.date,\n          children: [\"Today is \", format(new Date(), 'do MMMM Y')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Jeonghak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"Me.jpg\",\n          className: classes.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      anchor: \"left\",\n      variant: \"permanent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          variant: \"h5\",\n          children: \"Ninja Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: menuItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => history.push(item.path),\n          className: location.pathname == item.path ? classes.active : null,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: item.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, item.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.page,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Layout, \"+exway+yFu0n2S99E1Fi0bxw5r4=\", false, function () {\n  return [useStyles, useHistory, useLocation];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/charlie/Documents/The Net Ninja/Material-UI/src/components/Layout.js"],"names":["React","useHistory","useLocation","makeStyles","Drawer","Typography","List","ListItem","ListItemIcon","ListItemText","AddCircleOutlined","SubjectOutlined","AppBar","ToolBar","Avatar","format","drawerWidth","useStyles","theme","root","display","drawer","width","drawerPaper","page","backgroundColor","padding","spacing","active","title","appbar","color","toolbar","mixins","date","flexGrow","avatar","marginLeft","Layout","children","classes","history","location","menuItems","icon","path","Date","paper","map","item","push","pathname"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { makeStyles, Drawer, Typography } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { AddCircleOutlined, SubjectOutlined } from '@material-ui/icons';\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/Toolbar'\nimport Avatar from '@material-ui/core/Avatar';\nimport { format } from 'date-fns'\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      display: 'flex'\n    },\n    drawer: {\n      width: drawerWidth\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    page: {\n      backgroundColor: '#f9f9f9',\n      width: '100%',\n      padding: theme.spacing(3)\n    },\n    active: {\n      backgroundColor: '#f4f4f4'\n    },\n    title: {\n      padding: theme.spacing(2)\n    },\n    appbar: {\n      backgroundColor: 'white',\n      color: 'rgba(0, 0, 0, 0.87)',\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    toolbar: theme.mixins.toolbar,\n    date: {\n      flexGrow: 1\n    },\n    avatar: {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}\n)\n\nconst Layout = ({ children }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const menuItems = [\n    {\n      title: 'My notes',\n      icon: <SubjectOutlined color='primary' />,\n      path: '/'\n    },\n    {\n      title: 'Create',\n      icon: <AddCircleOutlined color='primary' />,\n      path: '/create'\n    }\n  ];\n\n  return (\n    <div className={classes.root}>\n\n      {/* app bar */}\n      <AppBar className={classes.appbar} elevation={0}>\n        <ToolBar>\n          <Typography className={classes.date}>\n            Today is {format(new Date, 'do MMMM Y')}\n          </Typography>\n          <Typography>\n            Jeonghak\n          </Typography>\n          <Avatar src='Me.jpg' className={classes.avatar} />\n        </ToolBar>\n      </AppBar>\n      {/* side drawer */}\n      <Drawer\n        className={classes.drawer}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor='left'\n        variant='permanent'>\n        <div>\n          <Typography className={classes.title} variant='h5'>\n            Ninja Notes\n          </Typography>\n        </div>\n\n        {/* List  */}\n        <List>\n          {menuItems.map(item => (\n            <ListItem\n              button\n              key={item.title}\n              onClick={() => history.push(item.path)}\n              className={location.pathname == item.path ? classes.active : null}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.title} />\n            </ListItem>\n          ))}\n        </List>\n\n      </Drawer>\n\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}