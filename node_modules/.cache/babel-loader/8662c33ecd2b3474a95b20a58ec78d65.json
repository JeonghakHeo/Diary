{"ast":null,"code":"var _jsxFileName = \"/Users/charlie/Documents/The Net Ninja/Material-UI/src/components/NoteCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { Avatar, IconButton, Typography } from '@material-ui/core';\nimport { DeleteOutlined } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core';\nimport { blue, green, pink, yellow } from '@material-ui/core/colors';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => makeStyles({\n  card: {\n    height: '320px',\n    width: '360px'\n  },\n  test: {\n    border: note => {\n      if (note.category === 'reminders') return '1px solid red';\n    }\n  },\n  avatar: {\n    backgroundColor: note => {\n      if (note.category === 'work') {\n        return yellow[700];\n      }\n\n      if (note.category === 'todos') {\n        return green[500];\n      }\n\n      if (note.category === 'reminders') {\n        return pink[500];\n      }\n\n      return blue[500];\n    }\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n});\n\nconst NoteCard = ({\n  note,\n  handleDelete\n}) => {\n  _s();\n\n  const classes = useStyles(note);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: (classes.card, classes.test),\n      elevation: 1,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: note.category[0].toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this),\n        action:\n        /*#__PURE__*/\n        // <IconButton onClick={() => handleDelete(note.id)}>\n        _jsxDEV(IconButton, {\n          children: [/*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            onClick: handleOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            \"aria-labelledby\": \"transition-modal-title\",\n            \"aria-describedby\": \"transition-modal-description\",\n            className: classes.modal,\n            open: open,\n            onClose: handleClose,\n            closeAfterTransition: true,\n            BackdropComponent: Backdrop,\n            BackdropProps: {\n              timeout: 500\n            },\n            children: /*#__PURE__*/_jsxDEV(Fade, {\n              in: open,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.paper,\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  id: \"transition-modal-title\",\n                  children: \"Transition modal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"transition-modal-description\",\n                  children: \"react-transition-group animates me.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this),\n        title: note.title,\n        subheader: note.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: note.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/create\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteCard, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c = NoteCard;\nexport default NoteCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteCard\");","map":{"version":3,"sources":["/Users/charlie/Documents/The Net Ninja/Material-UI/src/components/NoteCard.js"],"names":["useState","Link","Card","CardHeader","CardContent","CardActions","Button","Avatar","IconButton","Typography","DeleteOutlined","makeStyles","blue","green","pink","yellow","Modal","Backdrop","Fade","useStyles","theme","card","height","width","test","border","note","category","avatar","backgroundColor","modal","display","alignItems","justifyContent","paper","palette","background","boxShadow","shadows","padding","spacing","NoteCard","handleDelete","classes","open","setOpen","handleOpen","handleClose","toUpperCase","timeout","title","details"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,UAA7B,QAA+C,mBAA/C;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,MAA5B,QAA0C,0BAA1C;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAWT,UAAU,CAAC;AACtCU,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,OADJ;AAEJC,IAAAA,KAAK,EAAE;AAFH,GADgC;AAKtCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAGC,IAAD,IAAU;AAChB,UAAIA,IAAI,CAACC,QAAL,KAAkB,WAAtB,EACE,OAAO,eAAP;AACH;AAJG,GALgC;AAWtCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAGH,IAAD,IAAU;AACzB,UAAIA,IAAI,CAACC,QAAL,KAAkB,MAAtB,EAA8B;AAC5B,eAAOZ,MAAM,CAAC,GAAD,CAAb;AACD;;AACD,UAAIW,IAAI,CAACC,QAAL,KAAkB,OAAtB,EAA+B;AAC7B,eAAOd,KAAK,CAAC,GAAD,CAAZ;AACD;;AACD,UAAIa,IAAI,CAACC,QAAL,KAAkB,WAAtB,EAAmC;AACjC,eAAOb,IAAI,CAAC,GAAD,CAAX;AACD;;AACD,aAAOF,IAAI,CAAC,GAAD,CAAX;AACD;AAZK,GAX8B;AAyBtCkB,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,cAAc,EAAE;AAHX,GAzB+B;AA8BtCC,EAAAA,KAAK,EAAE;AACLL,IAAAA,eAAe,EAAET,KAAK,CAACe,OAAN,CAAcC,UAAd,CAAyBF,KADrC;AAELT,IAAAA,MAAM,EAAE,gBAFH;AAGLY,IAAAA,SAAS,EAAEjB,KAAK,CAACkB,OAAN,CAAc,CAAd,CAHN;AAILC,IAAAA,OAAO,EAAEnB,KAAK,CAACoB,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AAJJ;AA9B+B,CAAD,CAAvC;;AAsCA,MAAMC,QAAQ,GAAG,CAAC;AAAEf,EAAAA,IAAF;AAAQgB,EAAAA;AAAR,CAAD,KAA4B;AAAA;;AAC3C,QAAMC,OAAO,GAAGxB,SAAS,CAACO,IAAD,CAAzB;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkB7C,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAM8C,UAAU,GAAG,MAAM;AACvBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAKA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,GAAEF,OAAO,CAACtB,IAAR,EAAcsB,OAAO,CAACnB,IAAxB,CAAf;AAA6C,MAAA,SAAS,EAAE,CAAxD;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,MAAM,eACJ,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEmB,OAAO,CAACf,MAA3B;AAAA,oBAAoCF,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBqB,WAAjB;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAIE,QAAA,MAAM;AAAA;AACJ;AACA,gBAAC,UAAD;AAAA,kCACE,QAAC,cAAD;AAAgB,YAAA,OAAO,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AACE,+BAAgB,wBADlB;AAEE,gCAAiB,8BAFnB;AAGE,YAAA,SAAS,EAAEH,OAAO,CAACb,KAHrB;AAIE,YAAA,IAAI,EAAEc,IAJR;AAKE,YAAA,OAAO,EAAEG,WALX;AAME,YAAA,oBAAoB,MANtB;AAOE,YAAA,iBAAiB,EAAE9B,QAPrB;AAQE,YAAA,aAAa,EAAE;AACbgC,cAAAA,OAAO,EAAE;AADI,aARjB;AAAA,mCAYE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAEL,IAAV;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAED,OAAO,CAACT,KAAxB;AAAA,wCACE;AAAI,kBAAA,EAAE,EAAC,wBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAG,kBAAA,EAAE,EAAC,8BAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AA6BE,QAAA,KAAK,EAAER,IAAI,CAACwB,KA7Bd;AA8BE,QAAA,SAAS,EAAExB,IAAI,CAACC;AA9BlB;AAAA;AAAA;AAAA;AAAA,cADF,eAkCE,QAAC,WAAD;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,KAAK,EAAC,eAAlC;AAAA,oBACGD,IAAI,CAACyB;AADR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlCF,eAwCE,QAAC,WAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,OAAO,EAAC,UAA7B;AAAwC,YAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CAjED;;GAAMV,Q;UACYtB,S;;;KADZsB,Q;AAmEN,eAAeA,QAAf","sourcesContent":["import { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport { Avatar, IconButton, Typography } from '@material-ui/core';\nimport { DeleteOutlined } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core';\nimport { blue, green, pink, yellow } from '@material-ui/core/colors';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\n\nconst useStyles = (theme) => makeStyles({\n  card: {\n    height: '320px',\n    width: '360px'\n  },\n  test: {\n    border: (note) => {\n      if (note.category === 'reminders')\n        return '1px solid red'\n    }\n  },\n  avatar: {\n    backgroundColor: (note) => {\n      if (note.category === 'work') {\n        return yellow[700]\n      }\n      if (note.category === 'todos') {\n        return green[500]\n      }\n      if (note.category === 'reminders') {\n        return pink[500]\n      }\n      return blue[500]\n    }\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }\n})\n\nconst NoteCard = ({ note, handleDelete }) => {\n  const classes = useStyles(note);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div>\n      <Card className={classes.card, classes.test} elevation={1}>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>{note.category[0].toUpperCase()}</Avatar>\n          }\n          action={\n            // <IconButton onClick={() => handleDelete(note.id)}>\n            <IconButton>\n              <DeleteOutlined onClick={handleOpen} />\n              <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                  timeout: 500,\n                }}\n              >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <h2 id=\"transition-modal-title\">Transition modal</h2>\n                    <p id=\"transition-modal-description\">react-transition-group animates me.</p>\n                  </div>\n                </Fade>\n              </Modal>\n            </IconButton>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n\n        <CardContent>\n          <Typography variant='body2' color='textSecondary'>\n            {note.details}\n          </Typography>\n        </CardContent>\n\n        <CardActions>\n          <Link to='/create'>\n            <Button size=\"small\" variant='outlined' color=\"primary\">\n              Edit\n            </Button>\n          </Link>\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nexport default NoteCard\n"]},"metadata":{},"sourceType":"module"}